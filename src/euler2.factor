! Each new term in the Fibonacci sequence is generated by adding the previous two terms.
! By starting with 1 and 2, the first 10 terms will be:
! 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
! By considering the terms in the Fibonacci sequence whose values do not exceed four million,
! find the sum of the even-valued terms.

USE: math
USE: math.functions
USE: math.ranges
USE: present
USE: io
IN: euler2

: fib-h ( x y n -- y x+y n-1 )
    dup zero?
    [ ]
    [ 1 - -rot swap over + rot fib-h ]
    if ;
recursive

: fibonacci ( n -- x )
    0 1 rot
    fib-h
    drop nip ;

: euler2 ( -- )
    40 [0,b] ! 40 is an arbitrary stopping point known to be far enough
    [ fibonacci ] map
    [ [ 4000000 <= ] [ even? ] bi and ] filter
    sum
    present print ;

MAIN: euler2
